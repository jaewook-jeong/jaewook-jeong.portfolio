{"componentChunkName":"component---src-templates-works-work-js","path":"/main-portfolio/","result":{"data":{"site":{"siteMetadata":{"title":"Jae-Wook"}},"markdownRemark":{"id":"5935271e-470d-5cc8-b3bc-da1a6549e57b","excerpt":"Introduction 게시글을 작성하여 팀 소통을하고, 경기일정을 조율하여 지역랭킹 1등을 달성하세요! 풋살 SNS…","rawMarkdownBody":"Introduction\r\n--------------------------\r\n게시글을 작성하여 팀 소통을하고, 경기일정을 조율하여 지역랭킹 1등을 달성하세요!\r\n\r\n* 풋살 SNS 및 구장 점령을 통한 순위랭킹 프로그램입니다.\r\n* 팀을 만들어 운영하고, 게시글을 작성하여 소통할 수 있습니다.\r\n* 구장을 등록하고 해당 구장을 점령하여 점령 구장을 늘려 랭킹 순위를 높일 수 있습니다.\r\n* 구장을 점령하고 있는 팀에 점령전을 신청하여 승리를 통해 구장을 점령할 수 있습니다.\r\n\r\n프론트 엔드\r\n--------------------------\r\n첫 `React` 프로젝트입니다. `Next`프레임워크를 활용하여 SSR을 통한 자연스러운 사용자 경험을 제공하였습니다. 사이트의 규모가 큰 만큼 `Redux`를 사용하여 상태관리를 하였습니다. 또한 `Redux-saga`를 통해 사이드이펙트를 효과적으로 처리하였습니다. `styled-component`를 통해 CSS in JS를 구현하였고, 단점을 기존의 `Sass`로 보완하며 스타일을 처리하였습니다.\r\n\r\n백 엔드\r\n--------------------------\r\n`Node` 런타임을 활용하여 `Express`로 서버를 구현하였습니다. `Passport`를 인증 미들웨어로 사용하여 로그인기능울 구현하였습니다. 특히 기존의 세션방식에서 `JWT`를 사용한 토큰방식으로 더 규모가 큰 웹사이트에 맞는 방식을 택하였습니다. DB에는 `Sequelize`를 통해 데이터 CRUD를 처리하였습니다.\r\n\r\n배포\r\n--------------------------\r\n* AWS\r\n* Nginx\r\n* Docker\r\n* travis ci\r\n\r\n","html":"<h2>Introduction</h2>\n<p>게시글을 작성하여 팀 소통을하고, 경기일정을 조율하여 지역랭킹 1등을 달성하세요!</p>\n<ul>\n<li>풋살 SNS 및 구장 점령을 통한 순위랭킹 프로그램입니다.</li>\n<li>팀을 만들어 운영하고, 게시글을 작성하여 소통할 수 있습니다.</li>\n<li>구장을 등록하고 해당 구장을 점령하여 점령 구장을 늘려 랭킹 순위를 높일 수 있습니다.</li>\n<li>구장을 점령하고 있는 팀에 점령전을 신청하여 승리를 통해 구장을 점령할 수 있습니다.</li>\n</ul>\n<h2>프론트 엔드</h2>\n<p>첫 <code class=\"language-text\">React</code> 프로젝트입니다. <code class=\"language-text\">Next</code>프레임워크를 활용하여 SSR을 통한 자연스러운 사용자 경험을 제공하였습니다. 사이트의 규모가 큰 만큼 <code class=\"language-text\">Redux</code>를 사용하여 상태관리를 하였습니다. 또한 <code class=\"language-text\">Redux-saga</code>를 통해 사이드이펙트를 효과적으로 처리하였습니다. <code class=\"language-text\">styled-component</code>를 통해 CSS in JS를 구현하였고, 단점을 기존의 <code class=\"language-text\">Sass</code>로 보완하며 스타일을 처리하였습니다.</p>\n<h2>백 엔드</h2>\n<p><code class=\"language-text\">Node</code> 런타임을 활용하여 <code class=\"language-text\">Express</code>로 서버를 구현하였습니다. <code class=\"language-text\">Passport</code>를 인증 미들웨어로 사용하여 로그인기능울 구현하였습니다. 특히 기존의 세션방식에서 <code class=\"language-text\">JWT</code>를 사용한 토큰방식으로 더 규모가 큰 웹사이트에 맞는 방식을 택하였습니다. DB에는 <code class=\"language-text\">Sequelize</code>를 통해 데이터 CRUD를 처리하였습니다.</p>\n<h2>배포</h2>\n<ul>\n<li>AWS</li>\n<li>Nginx</li>\n<li>Docker</li>\n<li>travis ci</li>\n</ul>","frontmatter":{"title":"풋살 SNS, \"FUTCHALL\"","date":"October 28, 2020","description":"Futchall은 풋살을 위한 커뮤니티 및 순위랭킹 어플리케이션입니다. Pokémon GO에서 영감을 얻어 점령 시스템을 구현하였습니다. 구장을 점령하며 점령된 팀을 지도상에 표시하도록 만들었습니다.","time":null}}},"pageContext":{"slug":"/main-portfolio/"}},"staticQueryHashes":["3649515864","63159454"]}